(()=>{var e={860:e=>{"use strict";e.exports=require("express")},470:e=>{"use strict";e.exports=require("fs-extra")},13:e=>{"use strict";e.exports=require("mongodb")},738:e=>{"use strict";e.exports=require("multer")},109:e=>{"use strict";e.exports=require("sanitize-html")},441:e=>{"use strict";e.exports=require("sharp")},17:e=>{"use strict";e.exports=require("path")}},t={};function s(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,s),r.exports}(()=>{const{MongoClient:e,ObjectId:t}=s(13),o=s(860),i=s(738)(),r=s(109),n=s(470),a=s(441);let c;const d=s(17);n.ensureDirSync(d.join("public","uploaded-photos"));const l=o();function p(e,t,s){"number"!=typeof e.body.stressLevel&&(e.body.stressLevel=+e.body.stressLevel),"string"!=typeof e.body.description&&(e.body.description=""),"string"!=typeof e.body._id&&(e.body._id=""),e.cleanData={stressLevel:r(e.body.stressLevel,{allowedTags:[],allowedAttributes:{}}),description:r(e.body.description.trim(),{allowedTags:[],allowedAttributes:{}})},s()}l.set("view engine","ejs"),l.set("views","./views"),l.use(o.static("public")),l.use(o.json()),l.use(o.urlencoded({extended:!1})),l.use((function(e,t,s){t.set("WWW-Authenticate","Basic realm='OOCA Stress Tracking'"),"Basic YWRtaW46YWRtaW4="==e.headers.authorization?s():(console.log(e.headers.authorization),t.status(401).send("Try again"))})),l.get("/",((e,t)=>{t.render("admin")})),l.get("/api/getStress",(async(e,t)=>{const s=await c.collection("stressTracks").find().toArray();t.json(s)})),l.post("/create-stress",i.single("photo"),p,(async(e,s)=>{if(e.file){const t=`${Date.now()}.jpg`;await a(e.file.buffer).resize(844,456).jpeg({quality:60}).toFile(d.join("public","uploaded-photos",t)),e.cleanData.photo=t}console.log(e.body);const o=await c.collection("stressTracks").insertOne(e.cleanData),i=await c.collection("stressTracks").findOne({_id:new t(o.insertedId)});s.send(i)})),l.delete("/stress/:id",(async(e,s)=>{"string"!=typeof e.params.id&&(e.params.id="");const o=await c.collection("stressTracks").findOne({_id:new t(e.params.id)});o.photo&&n.remove(d.join("public","uploaded-photos",o.photo)),c.collection("stressTracks").deleteOne({_id:new t(e.params.id)}),s.send("Deleted!")})),l.post("/update-stress",i.single("photo"),p,(async(e,s)=>{if(e.file){const o=`${Date.now()}.jpg`;await a(e.file.buffer).resize(844,456).jpeg({quality:60}).toFile(d.join("public","uploaded-photos",o)),e.cleanData.photo=o;const i=await c.collection("stressTracks").findOneAndUpdate({_id:new t(e.body._id)},{$set:e.cleanData});i.value.photo&&n.remove(d.join("public","uploaded-photos",i.value.photo)),s.send(o)}else c.collection("stressTracks").findOneAndUpdate({_id:new t(e.body._id)},{$set:e.cleanData}),s.send(!1)})),async function(){const t=new e("mongodb://root:root@localhost:27017/OocaDB?&authSource=admin");await t.connect(),c=t.db(),port=3e3,l.listen(port,(()=>{console.log(`Server is running on ${port}`)}))}()})()})();